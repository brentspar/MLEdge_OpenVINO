# Use a local container set up like this:
# https://github.com/TurbulentDynamics/TD-env-setup-dev-help/env-setup/nvidia-docker2-base-ml-container.md
FROM td_base
#FROM turbulentdynamics/td_base

# Install python modules
RUN pip install --upgrade pip
RUN pip install -U --user --trusted-host pypi.python.org h5py pandas matplotlib dask pillow wheel setuptools mock 'future>=0.17.1'
RUN pip install -U --user jupyterlab


#Install Tensorflow from source to use all CPU instructions
RUN pip install -U --user keras_applications==1.0.6 keras_preprocessing==1.0.5 --no-deps

#Install bazel to build tensorflow https://docs.bazel.build/versions/master/install-ubuntu.html 
ARG BAZELVERSION=0.26.1
RUN wget https://github.com/bazelbuild/bazel/releases/download/$BAZELVERSION/bazel-$BAZELVERSION-installer-linux-x86_64.sh
RUN chmod +x bazel-$BAZELVERSION-installer-linux-x86_64.sh
RUN ./bazel-$BAZELVERSION-installer-linux-x86_64.sh --user
ENV export PATH="$PATH:$HOME/bin"

RUN git clone https://github.com/tensorflow/tensorflow.git
RUN cd tensorflow && git checkout v2.0.0

#========================#https://gist.github.com/hiteshjasani/97c76d33c7649f281f9c7e2749f607ab
ENV CI_BUILD_PYTHON=python
ENV TF_NEED_CUDA=1
ENV TF_CUDA_VERSION=10.0
ENV TF_CUDNN_VERSION=7
ENV TF_NEED_TENSORRT=0
ENV TF_CUDA_COMPUTE_CAPABILITIES=7.5
RUN sudo ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1
RUN LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}

RUN cd tensorflow && tensorflow/tools/ci_build/builds/configured GPU

RUN cd tensorflow && ~/bin/bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package
RUN cd tensorflow && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg
RUN pip install -U --user /tmp/tensorflow_pkg/tensorflow-*.whl

RUN pip install -U --user torchvision

# References
# https://www.tensorflow.org/install/install_sources
# https://stackoverflow.com/questions/41293077/how-to-compile-tensorflow-with-sse4-2-and-avx-instructions
# https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#AVX2
# https://en.wikipedia.org/wiki/SSE4
# https://en.wikipedia.org/wiki/FMA_instruction_set
# https://gcc.gnu.org/onlinedocs/gcc-7.1.0/gcc/x86-Options.html#x86-Options
# https://gcc.gnu.org/onlinedocs/gcc-4.5.3/gcc/i386-and-x86_002d64-Options.html

#Could use these to install pre-compiled binaries, HOWEVER, these will not use all CPU instructions available
#RUN pip install -U --user tensorflow-gpu
#RUN pip install -U --user tensorflow==2.0.0
#RUN pip install -U --user tensorflow-gpu==2.0.0
#RUN pip install -U --user tf-nightly-gpu 
#========================




# Copy the current directory contents into the container at /app
#COPY . /app


# Make port 8888 available to the world outside this container
#EXPOSE 8888


# Run app.py when the container launches
# CMD ["jupyter", "lab"]

